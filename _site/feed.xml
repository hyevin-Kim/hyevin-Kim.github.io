<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vveny's blog</title>
    <description>하루하루 공부한 내용을 정리하는 블로그입니다! java, Spring Boot, Back-end 
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 10 Mar 2022 15:12:11 +0900</pubDate>
    <lastBuildDate>Thu, 10 Mar 2022 15:12:11 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>[git blog]step02 - utterances으로 댓글 기능 만들기</title>
        <description>&lt;h1 id=&quot;utterances란&quot;&gt;utterances란?&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;공식 홈페이지&lt;br /&gt;
    &lt;a href=&quot;https://utteranc.es/&quot;&gt;utterances&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;utterances는 깃허브의 이슈기능을 가지고 댓글을 생성해준다고 합니다.&lt;br /&gt;
게시글 하나가 이슈 하나와 한 쌍이 되고, 게시글에 댓글을 달면 해당 이슈에 댓글이 달립니다.&lt;br /&gt;
댓글 창은 iframe으로 동작하며 해당 페이지가 로드 될 때, 페이지의 URL, pathname, 혹은 title을 가지고 issue search API를 통해 해당 이슈에 달린 댓글을 로딩하여 댓글 창에 로딩시켜준다고 합니다!&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;utterances-장점&quot;&gt;utterances 장점!&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;댓글 알림을 받을 수 있습니다.&lt;br /&gt;
 -github issues를 댓글 쓰레드로 사용하는 utterances는 댓글이 등록되면,&lt;br /&gt;
 새로운 issue가 등록된 것이므로 메일 알림을 받을 수 있습니다.&lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;설치 및 설정이 쉽습니다.&lt;br /&gt;
-utterances앱을 깃허브 계정에 추가, 댓글 저장 용도로 사용될 신규 레포지토리에 권한을 주면 됩니다.&lt;br /&gt;
-이후 댓글 영역에 스크립트 코드 한 줄만 추가해주면 셋팅이 끝납니다.&lt;/li&gt;
    &lt;li&gt;Markdown 문법을 이용하여 댓글 작성이 가능합니다.&lt;br /&gt;
-github 플랫폼 이용으로 마크다운 문법 사용이 가능합니다.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;utterances-적용&quot;&gt;utterances 적용!&lt;/h1&gt;
&lt;p&gt;적용하는 방법으로 참고한 블로그는 &lt;a href=&quot;https://ansohxxn.github.io/blog/utterances/&quot;&gt;공부하는 식빵맘&lt;/a&gt;님입니다!
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;1-댓글-issue가-올라올-저장소를-정하거나-혹은-생성합니다&quot;&gt;1. 댓글 Issue가 올라올 저장소를 정하거나 혹은 생성합니다.&lt;/h4&gt;

&lt;h4 id=&quot;2-utterance-를-install-설치-합니다&quot;&gt;2. utterance 를 Install 설치 합니다.&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/apps/utterances&quot;&gt;https://github.com/apps/utterances&lt;/a&gt; 사이트로 이동 후 설치합니다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/gitblog/22-03-08/00.png&quot; alt=&quot;00&quot; width=&quot;400&quot; height=&quot;400&quot; /&gt;
위 사진처럼 설정하고 request 눌러줍니다.&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-reques-후-페이지에서-설정해줍니다&quot;&gt;3. reques 후 페이지에서 설정해줍니다.&lt;/h4&gt;
&lt;p&gt;설치가 된 후 페이지에서 configuration부분을 찾아줍니다. 
&lt;img src=&quot;/assets/images/gitblog/22-03-08/01.png&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;repo: 댓글 Issue가 올라올 곳으로 선택한 저장소의 permalink를 작성합니다.(github아이디/저장소이름)
ex)vveny/-comments&lt;/strong&gt; &lt;br /&gt;
&lt;img src=&quot;/assets/images/gitblog/22-03-08/02.png&quot; alt=&quot;02&quot; /&gt;
Blog post &amp;lt;–&amp;gt; Issue: 매핑 방식을 선택&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;pathname&lt;br /&gt;
포스트의 pathname으로 이슈를 생성합니다.&lt;br /&gt;
이 경우 /blog/2020/12/18/utterances- 적용으로 이슈가 생성되어 매핑된다고합니다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/gitblog/22-03-08/03.png&quot; alt=&quot;03&quot; /&gt;
Theme: 테마 중 자신의 블로그 테마와 어울리는 것으로 선택합니다.&lt;br /&gt;
아래 코드: 복사합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;4-복사-코드&quot;&gt;4. 복사 코드&lt;/h4&gt;
&lt;p&gt;참고한 블로그에서는 이미 _config.yml부분에 있어서 설정만 해주셨지만…&lt;br /&gt;
제가 선택한 테마는 없어서 따로 넣어주었습니다.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;붙여넣을 코드&lt;/p&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--댓글기능 첨부--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;🙌COMMENTS&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--이곳에 자신이 복사한 코드를 붙여주면 됩니다!--&amp;gt;&lt;/span&gt;
    &amp;lt;script src=&quot;https://utteranc.es/client.js&quot;
        repo=&quot;vveny/-comments&quot;
        issue-term=&quot;pathname&quot;
        theme=&quot;github-light&quot;
        crossorigin=&quot;anonymous&quot;
        async&amp;gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;_layouts폴더 중 post.html에 들어갑니다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/gitblog/22-03-08/04.png&quot; alt=&quot;04&quot; width=&quot;400&quot; height=&quot;400&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아래 사진처럼 댓글이 들어가면 좋을 곳에 붙여줍니다.
저는 포스트 옆으로 이동하는 것 이후에 넣어주었습니다!
&lt;img src=&quot;/assets/images/gitblog/22-03-08/05.png&quot; alt=&quot;05&quot; /&gt;&lt;/p&gt;

&lt;p&gt;git에 commit 및 push합니다!&lt;br /&gt;
이러면 아래에 보이는 것처럼 완성됐습니다!&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/git-blog/git-blog-step02/</link>
        <guid isPermaLink="true">http://localhost:4000/git-blog/git-blog-step02/</guid>
        
        <category>git blog</category>
        
        
        <category>git-blog</category>
        
      </item>
    
      <item>
        <title>[git blog]step01 - 내가 기억하려고 작성한 마크다운 문법!</title>
        <description>&lt;h2 id=&quot;마크다운-문법&quot;&gt;마크다운 문법&lt;/h2&gt;

&lt;p&gt;지금 위에서 설명한것만으로 벌써 마크다운의 문법을 사용하였다.&lt;br /&gt;
사용한것부터 시작하여 마크다운 문법을 봐보자.&lt;/p&gt;

&lt;h3 id=&quot;1-헤더&quot;&gt;1. 헤더&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# this is a h1
## this is a h2 
### this is a h3 
#### this is a h4 
##### this is a h5 
###### this is a h6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-코드블럭&quot;&gt;2. 코드블럭&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;```&lt;/code&gt; 또는 &lt;code&gt;~~~&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;들여쓰기&lt;/li&gt;
  &lt;li&gt;언어별 코드블럭&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;22-precode&quot;&gt;2.2 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;pre&amp;gt;
&amp;lt;code&amp;gt;
def func(a,b):
    return a+b

print(func(2,3))
&amp;lt;/code&amp;gt;
&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;23-들여쓰기&quot;&gt;2.3 들여쓰기&lt;/h4&gt;
&lt;p&gt;탭이나 스페이스 4번을 통해 코드블럭을 만들수 있다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    def func(a,b):
        return a+b

    print(func(2,3))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;24-언어별-코드블럭&quot;&gt;2.4 언어별 코드블럭&lt;/h4&gt;
&lt;p&gt;개인적으로 편리하다고 생각합니다.&lt;br /&gt;
python 사용방법&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
~~~python
def func(a,b):
    return a+b

print(func(a,b))
~~~
&lt;/code&gt;
&lt;/pre&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;그밖에 언어들&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Bash (bash)&lt;/li&gt;
      &lt;li&gt;C# (cs)&lt;/li&gt;
      &lt;li&gt;CSS (css)&lt;/li&gt;
      &lt;li&gt;Diff (diff)&lt;/li&gt;
      &lt;li&gt;HTML, XML (html)&lt;/li&gt;
      &lt;li&gt;Ini (ini)&lt;/li&gt;
      &lt;li&gt;JSON (json)&lt;/li&gt;
      &lt;li&gt;Java (java)&lt;/li&gt;
      &lt;li&gt;JavaScript (javascript)&lt;/li&gt;
      &lt;li&gt;PHP (php)&lt;/li&gt;
      &lt;li&gt;Perl (perl)&lt;/li&gt;
      &lt;li&gt;Python (python)&lt;/li&gt;
      &lt;li&gt;Ruby (ruby)&lt;/li&gt;
      &lt;li&gt;SQL (sql)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-blockquote인용문&quot;&gt;3. BlockQuote(인용문)&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; This is a first blockquote
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt; This is a second blockquote
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; This is a third blockquote
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;blockquote-안에-다른-마크다운-요소를-포함-가능&quot;&gt;blockquote 안에 다른 마크다운 요소를 포함 가능&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; ## This is a h3
&amp;gt; * list1
&amp;gt; * list2
&amp;gt;   ~~~
&amp;gt;   code
&amp;gt;   ~~~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-글머리-기호&quot;&gt;4. 글머리 기호&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+ 글머리
  + 글머리2
    + 글머리3
      + 글머리 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-강조&quot;&gt;5. 강조&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*single asterisks*  
_single underscores_  
**double asterisks**  
__double underscores__  
~~cancelline~~  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;6-기호표시&quot;&gt;6. 기호표시&lt;/h3&gt;

&lt;p&gt;Markdown에서 이미 사용되는 기호 표기하기&lt;/p&gt;

&lt;p&gt;Markdown 문법에 사용되는 기호를 있는 그대로 표시하고 싶을 경우가 있습니다.&lt;br /&gt;
예를 들어 #을 기호 그대로 사용하고 싶지만 그냥 쓰면 H1 헤더로 출력합니다.&lt;br /&gt; 
그런 기호들입니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\   backslash
*   asterisk
_   underscore
{}  curly braces
[]  square brackets
()  parentheses
#   hash mark
+   plus sign
-   minus sign (hyphen)
.   dot
!   exclamation mark
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이런것들을 사용하고 싶다면 기호앞에 (=back slash)를 사용하면됩니다.&lt;/p&gt;

&lt;h3 id=&quot;7-수평선&quot;&gt;7. 수평선&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* * *

***

*****

----

- - -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;8-링크&quot;&gt;8. 링크&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;외부 링크 &lt;br /&gt;
[링크 키워드](링크 url)
    &lt;pre&gt;&lt;code class=&quot;language-ex)&quot;&gt;[내 블로그](https://vveny.github.io)
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;자동 링크
    &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;https:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;vveny.github.io&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;9-이미지&quot;&gt;9. 이미지&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![그림1](/assets/images/gitblog/22-03-07/01.jpeg)
![그림2](/assets/images/gitblog/22-03-07/01.jpeg){: width=&quot;400&quot; height=&quot;400&quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;10-줄바꿈&quot;&gt;10. 줄바꿈&lt;/h3&gt;

&lt;h4 id=&quot;1-br-사용&quot;&gt;1. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 사용&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;줄 바꿈시 사용 &amp;lt;br&amp;gt;
줄 바꿈시 사용
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;2-enter-2번&quot;&gt;2. Enter 2번&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;줄 바꿈시 사용  


줄 바꿈시 사용
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;3-스페이스바-2번&quot;&gt;3. 스페이스바 2번&lt;/h4&gt;

&lt;h3 id=&quot;11-표&quot;&gt;11. 표&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;| ------ | NumPy | PyTorch |
| ------ | -------- | ---------- |
| 선언 | np.array() | torch.FloatTensor, &amp;lt;br/&amp;gt; torch.Tensor()|
| 차원 확인 | .ndim | .dim()|
| 크기 확인 | .shape | .size()|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;——&lt;/th&gt;
      &lt;th&gt;NumPy&lt;/th&gt;
      &lt;th&gt;PyTorch&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;선언&lt;/td&gt;
      &lt;td&gt;np.array()&lt;/td&gt;
      &lt;td&gt;torch.FloatTensor, &lt;br /&gt; torch.Tensor()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;차원 확인&lt;/td&gt;
      &lt;td&gt;.ndim&lt;/td&gt;
      &lt;td&gt;.dim()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;크기 확인&lt;/td&gt;
      &lt;td&gt;.shape&lt;/td&gt;
      &lt;td&gt;.size()&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;12-expander-control&quot;&gt;12. Expander control&lt;/h3&gt;

&lt;p&gt;마크다운에서 접기/펼치기 가능한 컨트롤 문법&lt;br /&gt;
마크다운 자체에는 기능이 없고 html을 이용 –&amp;gt; html의 details 사용&lt;/p&gt;

&lt;h4 id=&quot;1&quot;&gt;1.&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;details&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;접기/펼치기 버튼&lt;span class=&quot;nt&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;markdown=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

|제목|내용|
|--|--|
|1|1|
|2|10|

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;details&gt;
&lt;summary&gt;접기/펼치기 버튼&lt;/summary&gt;
&lt;div&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;제목&lt;/th&gt;
          &lt;th&gt;내용&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;10&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

  &lt;/div&gt;
&lt;/details&gt;

&lt;h4 id=&quot;2&quot;&gt;2.&lt;/h4&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;details&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;blockquote&amp;gt;&lt;/span&gt;
    숨김숨김
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/blockquote&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;details&gt;
&lt;blockquote&gt;
    숨김숨김
&lt;/blockquote&gt;
&lt;/details&gt;
</description>
        <pubDate>Mon, 07 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/git-blog/git-blog-step01/</link>
        <guid isPermaLink="true">http://localhost:4000/git-blog/git-blog-step01/</guid>
        
        <category>git blog</category>
        
        
        <category>git-blog</category>
        
      </item>
    
      <item>
        <title>[git blog]step00 - 테마 Voyager 적용</title>
        <description>&lt;h1 id=&quot;git-blog를-시작하게-된-이유&quot;&gt;git blog를 시작하게 된 이유&lt;/h1&gt;
&lt;p&gt;원래 3월 전에 git blog를 만들고, 배운 것을 기록하려고 했으나…생각보다 만드는 것이 오래걸렸습니다.&lt;br /&gt;
강의를 보면서 만드는 데도 다른 테마로 만들어서 “오류 -&amp;gt; 해결”의 반복을 겪다가 여기까지 왔습니다.&lt;br /&gt;
시간이 생각보다 많이 걸렸고, 사실 지금도 마음에 쏙 들게 완성이 된 것은 아니지만…&lt;br /&gt;
그래도 틀은 잡힌 것 같아서 지금부터 기록을 작성해보려고 합니다!&lt;br /&gt;
테마 “Voyager”를 어떻게 변경했는지를 다루려고 하기 때문에&lt;br /&gt;
github 레파지토리 만드는 것까지 작성하진 않았습니다😆
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;jekyll--사용하는-이유&quot;&gt;jekyll? &amp;amp; 사용하는 이유&lt;/h1&gt;
&lt;p&gt;처음 git blog를 만드려고 했을 때 jekyll를 사용해서 만들어야 한다는 것을 알고..왜?&lt;br /&gt;
라는 생각을 했고, 찾아봤습니다. &lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jekyll은 Markdown 형식의 텍스트 파일을 HTML 파일로 변환해 주는 하나의 변환 도구&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이처럼 Jekyll이 HTML 파일로 만들어 주니까 사용자는 블로그에 포스팅시 Markdown으로 작성하고&lt;br /&gt;
나중에 Jekyll로 빌드해서 서버에 올리면 된다고합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;공식 홈페이지&lt;br /&gt;
    &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;jekyll&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;homebrew-ruby-gem-설치&quot;&gt;Homebrew, Ruby, gem 설치&lt;/h1&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 1번&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Mac에서는 Homebrew로 패키지를 설치 및 관리하는 것이 좋다고 합니다!&lt;/span&gt;
/bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 2번&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# brew를 사용하여 rbenv라는 Ruby 버전 관리자를 설치합니다.&lt;/span&gt;
brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;rbenv

&lt;span class=&quot;c&quot;&gt;# 3번&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# rbenv를 초기화 해준 후&lt;/span&gt;
rbenv init

&lt;span class=&quot;c&quot;&gt;# 4번&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 설치가 제대로 되었는지 확인합니다.&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-doctor | bash

&lt;span class=&quot;c&quot;&gt;# 5번&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 전 강의를 보면서 해서 Ruby버전 2.7.2를 rbenv를 사용하여 설치해서 진행했습니다.&lt;/span&gt;
rbenv &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;2.7.2

&lt;span class=&quot;c&quot;&gt;# 6번&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 2.7.4버전을 Main으로 고정한 뒤&lt;/span&gt;
rbenv global 2.7.2

&lt;span class=&quot;c&quot;&gt;# 7번&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 현재 실행 버전을 테스트합니다.&lt;/span&gt;
ruby &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 마지막으로 이렇게 결과가 나왔을 때 다음으로 진행했습니다!&lt;/span&gt;
ruby 2.7.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;테마-선택---voyager&quot;&gt;테마 선택 - Voyager&lt;/h1&gt;
&lt;p&gt;강의에서 선택한 사이트는 제 마음에 들지 않아서 새로운 사이트를 찾아봤고, 이 테마 말고&lt;br /&gt;
2-3개 정도 다른 사이트로 설정해봤으나,,,무엇인가 오류가 나고, 적용이 되지 않아서..ㅜ&lt;br /&gt;
아직까지 오류가 나지 않고 새롭게 바꾸는 것에도 적용이 잘 되고 있는 이 테마로 정착했습니다!&lt;br /&gt;
아래 사이트에서 “Voyager”로 검색헤서 적용하면 됩니다!&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;jekyll 테마 사이트&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
사실 다른 테마를 사용하셔도 “_config.yml”파일만 변경해주시면, 어렵지 않습니다!
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;테마-설정-변경&quot;&gt;테마 설정 변경&lt;/h1&gt;
&lt;p&gt;_config.yml 파일 설정부분!&lt;/p&gt;
&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Site settings&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 블로그 타이틀 설정&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;vveny's blog&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 자신의 이메일 설정&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;viin99@naver.com&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# this means to ignore newlines until &quot;baseurl:&quot;, 메타정보입니다.&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;하루하루 공부한 내용을 정리하는 블로그입니다! java, Spring Boot, Back-end&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 아마 블로그 검색시 나오게 되는 정보인 것 같습니다만....아직 검색에 문제가 생겨...확실하진 않습니다ㅠ&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 아래 url과 같이 적거나 공백. 서브 경로가 있는 경우에만 적어줍니다.&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 언어 설정해줬습니다!&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ko'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 자신의 깃블로그 주소를 적어줍니다.&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://vveny.github.io'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 이부분은 트위터 있으시면 작성해주시면 됩니다! 저는 트위터는 없어서 주석 그대로 두었습니다.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# twitter_username:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# github에서 사용 중인 이름을 작성해줍니다.&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;github_username&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;vveny&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# disqus_username:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위처럼 설정했습니다! 다른 부분들은 모르는 부분이라….그대로 두었습니다.&lt;br /&gt;
혹여 다른 사항을 알게 되면 수정하겠습니다!
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;테마-적용-확인-방법&quot;&gt;테마 적용 확인 방법&lt;/h1&gt;
&lt;p&gt;vscode로 진행했기에 프로그램을 열고, 자신의 블로그 root폴더로 가줍니다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/gitblog/22-03-02/01.png&quot; alt=&quot;01&quot; /&gt;
터미널을 열고 아래 명령어를 순서대로 입력해줍니다.&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 1번&lt;/span&gt;
gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bundler jekyll minima jekyll-feed tzinfo-data rdiscount

&lt;span class=&quot;c&quot;&gt;# 2번&lt;/span&gt;
bundle &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 3번&lt;/span&gt;
bundle update

&lt;span class=&quot;c&quot;&gt;# 4번&lt;/span&gt;
bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;오류&quot;&gt;오류…&lt;/h4&gt;
&lt;p&gt;위의 방법대로 설치하다가 오류가 나서 푸른쿠우님 &lt;a href=&quot;https://choijaegwon.github.io/githubblog/GithubBlog1/&quot;&gt;블로그&lt;/a&gt;를 보면서 다시 설치했습니다ㅜ
무슨 오류인지는 다시 정리하겠습니다! 검색해도 찾기 힘들어서….많이 슬펐던…&lt;br /&gt;
물론 아예 삭제하고 새로운 파일에다가 재설치하니 잘 작동했습니다! ^ㅁ^ &lt;br /&gt;
설치를 잘못했던 건지 아니면 진짜 무슨 오류였던 건지는 새로운 파일에 다시 설치해보고 수정하겠습니다!!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
3번 명령어 실행시&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;_plugins, _site, .jekyll-cache, .sass-cache&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위의 파일이 생성되면 성공입니다!👏&lt;br /&gt;
아래에 있는 사진처럼 다 나오는 건 아니고, 위의 파일들이 대략적으로 생성되면 됩니다!
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/gitblog/22-03-02/02.png&quot; alt=&quot;02&quot; /&gt;
&lt;br /&gt;
결과적으로 4번 명령어를 실행하게 되면 위 사진처럼 터미널에 나올 겁니다.&lt;br /&gt;
그러면 링크 따라가기로 실행하시면 실시간으로 블로그를 보실 수 있습니다!&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 02 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/git-blog/git-blog-step00/</link>
        <guid isPermaLink="true">http://localhost:4000/git-blog/git-blog-step00/</guid>
        
        <category>git blog</category>
        
        
        <category>git-blog</category>
        
      </item>
    
  </channel>
</rss>
